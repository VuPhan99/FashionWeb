{"ast":null,"code":"import React from'react';import{withStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';var CustomTableCell=withStyles(function(theme){return{head:{backgroundColor:theme.palette.common.black,color:theme.palette.common.white},body:{fontSize:14}};})(TableCell);var styles=function styles(theme){return{root:{width:'100%',marginTop:theme.spacing(1)*3,overflowX:'auto'},table:{minWidth:700},row:{'&:nth-of-type(odd)':{backgroundColor:theme.palette.background.default}}};};var id=0;function createData(name,calories,fat,carbs,protein){id+=1;return{id:id,name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];function CustomizedTable(props){var classes=props.classes;return/*#__PURE__*/React.createElement(Paper,{className:classes.root},/*#__PURE__*/React.createElement(Table,{className:classes.table},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(CustomTableCell,null,\"Dessert (100g serving)\"),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},\"Calories\"),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},\"Fat (g)\"),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},\"Carbs (g)\"),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},\"Protein (g)\"))),/*#__PURE__*/React.createElement(TableBody,null,rows.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{className:classes.row,key:row.id},/*#__PURE__*/React.createElement(CustomTableCell,{component:\"th\",scope:\"row\"},row.name),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},row.calories),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},row.fat),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},row.carbs),/*#__PURE__*/React.createElement(CustomTableCell,{numeric:true},row.protein));}))));}export default withStyles(styles)(CustomizedTable);","map":{"version":3,"sources":["V:/Web/FashionWeb/admin/src/utils/demos/tables/CustomizedTable.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","overflowX","table","minWidth","row","background","default","id","createData","name","calories","fat","carbs","protein","rows","CustomizedTable","props","classes","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1) * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Dessert (100g serving)</CustomTableCell>\n            <CustomTableCell numeric>Calories</CustomTableCell>\n            <CustomTableCell numeric>Fat (g)</CustomTableCell>\n            <CustomTableCell numeric>Carbs (g)</CustomTableCell>\n            <CustomTableCell numeric>Protein (g)</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </CustomTableCell>\n                <CustomTableCell numeric>{row.calories}</CustomTableCell>\n                <CustomTableCell numeric>{row.fat}</CustomTableCell>\n                <CustomTableCell numeric>{row.carbs}</CustomTableCell>\n                <CustomTableCell numeric>{row.protein}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);\n"]},"metadata":{},"sourceType":"module"}